project:
  appname: <%= app_name %>
  version_control: git
  # The origin url on Github
  # origin: username/repo_title
bootstrap:
  env_file: .env.production
  chef-bootstrapper:
    package_name: chefdk_3.13.1-1_amd64.deb
    package_url: https://packages.chef.io/files/stable/chefdk/3.13.1/ubuntu/16.04/chefdk_3.13.1-1_amd64.deb
build:
  registry:
    # url: ghcr.io # for Github Container Service. Should work for similar services such as Gitlab
    # url: :dockerhub # for default Dockerhub Service
  settings_folder: .shiplane
  environment_file: .env.production
  compose_filepath: docker-compose.yml
  dockerfile_filepath: Dockerfile
# Define the artifacts that you want built here
  artifacts:
    container-name:
      tag: <%= app_name %>-base:latest
      repo: kirillian2/<%= app_name %>
      ports:
        - "3000:3000"
  compose:
    whitelist:
      - services.container-name
    blacklist:
      - services.container-name.tty
      - services.container-name.stdin_open
      - services.container-name.volumes
      - services.container-name.ports
      - services.container-name.depends_on
deploy:
  servers:
    # `server-url` is your server domain or ip address here (e.g. `12.345.67.89` or `myapp.com`)
    server-url:
      # Only set this flag if you need docker to escalate permissions and run everything as sudo (default Ubuntu AMI on AWS requires this)
      requires_sudo: false
      # Put SSH options here
      # ssh_options:
      #   user: a_user
      #   keys: "path/to/ssh/keys"
      #   forward_agent: true
      #   auth_methods:
      #     - publickey
